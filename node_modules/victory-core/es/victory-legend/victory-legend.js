import _partialRight from "lodash/partialRight";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React from "react";
import PropTypes from "prop-types";

import { default as getBaseProps } from "./helper-methods";
import CustomPropTypes from "../victory-util/prop-types";
import addEvents from "../victory-util/add-events";
import Helpers from "../victory-util/helpers";
import VictoryLabel from "../victory-label/victory-label";
import VictoryContainer from "../victory-container/victory-container";
import VictoryTheme from "../victory-theme/victory-theme";
import Point from "../victory-primitives/point";

var fallbackProps = {
  orientation: "vertical",
  x: 0,
  y: 0
};

var defaultLegendData = [{ name: "Series 1" }, { name: "Series 2" }];

var VictoryLegend = function (_React$Component) {
  _inherits(VictoryLegend, _React$Component);

  function VictoryLegend() {
    _classCallCheck(this, VictoryLegend);

    return _possibleConstructorReturn(this, (VictoryLegend.__proto__ || Object.getPrototypeOf(VictoryLegend)).apply(this, arguments));
  }

  _createClass(VictoryLegend, [{
    key: "render",
    value: function render() {
      var role = this.constructor.role;

      var props = Helpers.modifyProps(this.props, fallbackProps, role);
      var children = this.renderData(props);
      return props.standalone ? this.renderContainer(props.containerComponent, children) : children;
    }
  }]);

  return VictoryLegend;
}(React.Component);

VictoryLegend.displayName = "VictoryLegend";
VictoryLegend.role = "legend";
VictoryLegend.propTypes = {
  colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf(["grayscale", "qualitative", "heatmap", "warm", "cool", "red", "green", "blue"])]),
  containerComponent: PropTypes.element,
  data: PropTypes.arrayOf(PropTypes.shape({
    name: PropTypes.string.isRequired,
    label: PropTypes.object,
    symbol: PropTypes.object
  })),
  dataComponent: PropTypes.element,
  eventKey: PropTypes.oneOfType([PropTypes.func, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), PropTypes.string]),
  events: PropTypes.arrayOf(PropTypes.shape({
    target: PropTypes.oneOf(["data", "labels", "parent"]),
    eventKey: PropTypes.oneOfType([PropTypes.array, CustomPropTypes.allOfType([CustomPropTypes.integer, CustomPropTypes.nonNegative]), PropTypes.string]),
    eventHandlers: PropTypes.object
  })),
  groupComponent: PropTypes.element,
  gutter: PropTypes.number,
  height: PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.func]),
  itemsPerRow: PropTypes.number,
  labelComponent: PropTypes.element,
  orientation: PropTypes.oneOf(["horizontal", "vertical"]),
  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({
    top: PropTypes.number,
    bottom: PropTypes.number,
    left: PropTypes.number,
    right: PropTypes.number
  })]),
  sharedEvents: PropTypes.shape({
    events: PropTypes.array,
    getEventState: PropTypes.func
  }),
  standalone: PropTypes.bool,
  style: PropTypes.shape({
    data: PropTypes.object,
    labels: PropTypes.object,
    parent: PropTypes.object
  }),
  symbolSpacer: PropTypes.number,
  theme: PropTypes.object,
  width: PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.func]),
  x: PropTypes.number,
  y: PropTypes.number
};
VictoryLegend.defaultProps = {
  data: defaultLegendData,
  containerComponent: React.createElement(VictoryContainer, null),
  dataComponent: React.createElement(Point, null),
  groupComponent: React.createElement("g", null),
  labelComponent: React.createElement(VictoryLabel, null),
  standalone: true,
  theme: VictoryTheme.grayscale
};
VictoryLegend.getBaseProps = _partialRight(getBaseProps, fallbackProps);
VictoryLegend.expectedComponents = ["dataComponent", "labelComponent", "groupComponent", "containerComponent"];


export default addEvents(VictoryLegend);